// Generated by CoffeeScript 1.6.2
(function() {
  var client, fs, randobet;

  fs = require("fs");

  client = require("capture/client");

  randobet = function(n) {
    var a, i, s;

    a = ('abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789').split('');
    s = (function() {
      var _i, _results;

      _results = [];
      for (i = _i = 0; 0 <= n ? _i <= n : _i >= n; i = 0 <= n ? ++_i : --_i) {
        _results.push(a[Math.random() * a.length | 0]);
      }
      return _results;
    })();
    return s.join('');
  };

  module.exports = {
    upload: function(req, res) {
      var type;

      type = req.files.image.type;
      return fs.readFile(req.files.image.path, function(err, data) {
        var result;

        if (!err) {
          result = ("data:" + type + ";base64,") + data.toString("base64");
          return res.view("pages/upload", {
            image: "\"" + result + "\""
          });
        } else {

        }
      });
    },
    share: function(req, res) {
      var myClient;

      myClient = new client(req.param("dna"));
      return myClient.run(function(data64) {
        var createHash, data, hash, save;

        data = new Buffer(data64.toString(), 'base64');
        hash = '';
        createHash = function() {
          hash = randobet(12);
          return Image.find({
            hash: hash
          }).done(function(err, img) {
            if (img == null) {
              return save();
            } else {
              return createHash();
            }
          });
        };
        save = function() {
          return Image.create({
            hash: hash,
            image: data
          }).done(function(err, img) {
            if (!err) {
              return res.json({
                status: 'success',
                hash: hash
              });
            } else {

            }
          });
        };
        return createHash();
      });
    },
    show: function(req, res) {
      return Image.find({
        hash: req.param('hash')
      }).done(function(err, img) {
        if (!err) {
          res.setHeader('Content-Type', 'image/png');
          return res.end(img.image);
        } else {

        }
      });
    }
  };

}).call(this);
